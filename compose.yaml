services:
  # Database
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: streaming
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # User Service
  userservice:
    image: userservice
    build:
      context: .
      dockerfile: UserService/Dockerfile
    ports:
      - "8001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=postgres;Database=streaming;User Id=postgres;Password=postgres;
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # NGINX RTMP Server
  nginx-rtmp:
    image: tiangolo/nginx-rtmp:latest
    ports:
      - "1935:1935"  # RTMP
      - "8080:80"    # HTTP

volumes:
  postgres-data:
  redis-data:

  streamservice:
    image: streamservice
    build:
      context: .
      dockerfile: StreamService/Dockerfile

  analyticsservice:
    image: analyticsservice
    build:
      context: .
      dockerfile: AnalyticsService/Dockerfile

  reccomendationservice:
    image: reccomendationservice
    build:
      context: .
      dockerfile: ReccomendationService/Dockerfile

  authservice:
    image: authservice
    build:
      context: .
      dockerfile: AuthService/Dockerfile
